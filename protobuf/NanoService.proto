syntax = "proto3";
package nano;

import 'Accounts.proto';
import 'Blocks.proto';
import 'Peers.proto';
import 'Wallet.proto';

service NanoRPC {
  // Accounts
  rpc AccountBalance (AccountRequest) returns (AccountBalanceResponse) {}
  rpc AccountBlockCount (AccountRequest) returns (AccountBlockCountResponse) {}
  rpc AccountInfo (AccountInfoRequest) returns (AccountInfoResponse) {}
  rpc AccountCreate (AccountCreateRequest) returns (AccountResponse) {}
  rpc AccountGet (AccountKeyRequest) returns (AccountResponse) {}
  rpc AccountHistory (AccountHistoryRequest) returns (AccountHistoryResponse) {}
  rpc AccountList (WalletRequest) returns (AccountListResponse) {}
  rpc AccountMove (AccountMoveRequest) returns (AccountMoveResponse) {}
  rpc AccountPublicKey (AccountRequest) returns (AccountKeyResponse) {}
  rpc AccountRemove (AccountRemoveRequest) returns (AccountRemoveResponse) {}
  rpc AccountRepresentative (AccountRequest) returns (AccountResponse) {}
  rpc AccountRepresentativeSet (AccountRepresentativeRequest) returns (BlockResponse) {}
  rpc AccountWeight (AccountRequest) returns (WeightResponse) {}
  rpc AccountsBalances (AccountsRequest) returns (AccountsBalancesResponse) {}
  rpc AccountsCreate (AccountsCreateRequest) returns (AccountsResponse) {}
  rpc AccountsFrontiers (AccountsRequest) returns (FrontiersResponse) {}
  rpc AccountsPending (AccountsPendingRequest) returns (AccountsPendingResponse) {}
  rpc ValidateAccountNumber (AccountRequest) returns (ValidResponse) {}

  // Blocks
  rpc BlockCount (EmptyRequest) returns (BlockCountResponse) {}
  rpc BlockGet (BlockRequest) returns (Block) {}

  // Peers
  rpc Peers (EmptyRequest) returns (PeersResponse) {}
}

message EmptyRequest {
}
