syntax = "proto3";
package nano;

import "google/protobuf/timestamp.proto";
import 'Blocks.proto';

message AccountRequest {
  string account = 1;
}

message AccountInfoResponse {
  string frontier = 1;
  string open_block = 2;
  string representative_block = 3;
  string balance = 4;
  google.protobuf.Timestamp modified_timestamp = 5;
  uint32 block_count = 6;

  string representative = 7;
  string weight = 8;
  string pending = 9;
}

message AccountBalanceResponse {
  string balance = 1;
  string pending = 2;
}

message AccountBlockCountResponse {
  uint32 block_count = 1;
}

message AccountInfoRequest {
  string account = 1;
  bool representative = 2;
  bool weight = 3;
  bool pending = 4;
}

message AccountCreateRequest {
  string wallet = 1;
  bool work = 2;
}

message AccountResponse {
  string account = 1;
}

message AccountKeyRequest {
  string key = 1;
}

message AccountHistoryRequest {
  string account = 1;
  int32 count = 2;

  bool raw = 3;
  string head = 4;
}

message AccountHistoryResponse {
  message HistoryEntry {
    BlockType type = 1;
    string account = 2;
    string amount = 3;
    string hash = 4;

    string representative = 5;
    string link = 6;
    string balance = 7;
    string previous = 8;
    BlockType subtype = 9;
    string work = 10;
    string signature = 11;
  }

  repeated HistoryEntry history = 1;
  string previous = 2;
}

message AccountListResponse {
  repeated string accounts = 1;
}

message AccountMoveRequest {
  string wallet = 1;
  string source = 2;
  repeated string accounts = 3;
}

message AccountMoveResponse {
  bool moved = 1;
}

message AccountKeyResponse {
  string key = 1;
}

message AccountRemoveRequest {
  string wallet = 1;
  string account = 2;
}

message AccountRemoveResponse {
  bool removed = 1;
}

message AccountRepresentativeRequest {
  string wallet = 1;
  string account = 2;
  string representative = 3;

  string work = 4;
}

message WeightResponse {
  string weight = 1;
}

message AccountsRequest {
  repeated string accounts = 1;
}

message AccountsResponse {
  repeated string accounts = 1;
}

message AccountsBalancesResponse {
  map<string, AccountBalanceResponse> balances = 1;
}

message AccountsCreateRequest {
  string wallet = 1;
  int32 count = 2;
  bool work = 3;
}

message AccountsPendingRequest {
  repeated string accounts = 1;
  int32 count = 2;

  string threshold = 3;
  bool source = 4;
  bool include_active = 5;
}

message AccountsPendingResponse {
  message PendingBlockAccount {
    repeated PendingBlock blocks = 1;
  }

  message PendingBlock {
    string hash = 1;
    string amount = 2;
    string source = 3;
  }

  map<string, PendingBlockAccount> accounts = 1;
}

message ValidResponse {
  bool valid = 1;
}
